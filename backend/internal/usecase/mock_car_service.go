// Code generated by mockery v2.53.4. DO NOT EDIT.

package usecase

import (
	entity "github.com/eastwesser/car-rental/backend/internal/entity"
	mock "github.com/stretchr/testify/mock"
)

// MockCarService is an autogenerated mock type for the CarService type
type MockCarService struct {
	mock.Mock
}

// GetCars provides a mock function with given fields: filter
func (_m *MockCarService) GetCars(filter string) []entity.Car {
	ret := _m.Called(filter)

	if len(ret) == 0 {
		panic("no return value specified for GetCars")
	}

	var r0 []entity.Car
	if rf, ok := ret.Get(0).(func(string) []entity.Car); ok {
		r0 = rf(filter)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entity.Car)
		}
	}

	return r0
}

// NewMockCarService creates a new instance of MockCarService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockCarService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockCarService {
	mock := &MockCarService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
